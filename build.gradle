buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }
}
plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
    id "com.github.johnrengelman.shadow" version "2.0.2"
    id 'maven-publish'
    id "com.jfrog.bintray" version "1.8.0"
}

repositories {
    jcenter()
    maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }
}

apply plugin: 'kotlin-kapt'

group 'propCheck'
version '0.9'

def arrow_version = "0.9.0-SNAPSHOT"
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.21" // For forAll instance lookups
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "io.kotlintest:kotlintest-runner-junit5:3.2.1" // For converting back to kotlintest and for exceptions

    implementation "org.apache.commons:commons-math3:3.6.1" // For floating point error function

    kapt    "io.arrow-kt:arrow-annotations-processor:$arrow_version" // auto generation for @extension @optics and @higherkind
    implementation "io.arrow-kt:arrow-annotations:$arrow_version" // arrow annotations @extension and @higherkind
    implementation "io.arrow-kt:arrow-core-data:$arrow_version" // Option/Either ...
    implementation "io.arrow-kt:arrow-syntax:$arrow_version" // helper functions like curried...
    implementation "io.arrow-kt:arrow-typeclasses:$arrow_version" // arrows typeclasses
    implementation "io.arrow-kt:arrow-extras:$arrow_version" // Mtl + collection wrappers
    implementation "io.arrow-kt:arrow-core-extensions:$arrow_version" // instances for typeclasses for datatypes in core-data
    implementation "io.arrow-kt:arrow-extras-extensions:$arrow_version" // instances for typeclasses for datatypes in extras
    implementation "io.arrow-kt:arrow-generic:$arrow_version" // @optics and some generic helpers
    implementation "io.arrow-kt:arrow-effects:$arrow_version" // IO and arrow fx
    implementation "io.arrow-kt:arrow-effects-extensions:$arrow_version" // instances ^^
    implementation "io.arrow-kt:arrow-effects-io-extensions:$arrow_version" // instances ^^
    implementation "io.arrow-kt:arrow-free:$arrow_version" // Free monads mainly for bindingStacksafe
    implementation "io.arrow-kt:arrow-free-extensions:$arrow_version" // instances ^^
    implementation "io.arrow-kt:arrow-optics:$arrow_version" // lenses

    testImplementation "io.arrow-kt:arrow-test:$arrow_version" // test helpers and laws
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

def pomConfig = {
    licenses {
        license {
            name "BSD 3-Clause"
            url "https://github.com/1Jajen1/propCheck/blob/master/LICENSE"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "jannis"
            name "Jannis Overesch"
            email "overesch.jannis@gmail.com"
        }
    }

    scm {
        url "https://github.com/1Jajen1/propCheck"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            groupId 'propCheck'
            artifactId 'propCheck-kt'
            version '0.9'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Property based testing for kotlin')
                root.appendNode('name', 'propCheck-kt')
                root.appendNode('url', 'https://github.com/1Jajen1/propCheck')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    publish = true
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['mavenPublication']
    pkg {
        repo = 'propCheck-kt'
        name = 'propCheck-kt'
        licenses = ['BSD 3-Clause']
        vcsUrl = 'https://github.com/1Jajen1/propCheck'
        version {
            name = '0.9'
            released  = new Date()
        }
    }
}